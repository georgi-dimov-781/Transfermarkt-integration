{#
/**
 * @file
 * Theme override to display a node of type player in full view mode.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
  set classes = [
    'player',
    'node',
    'node--' ~ node.bundle|clean_class,
    'node--player',
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}
<article{{ attributes.addClass(classes) }}>
  <div class="node__title">
    <div class="title-area">
      <div class="container">
        <div class="title-area__content">
          <h1{{ title_attributes }}>{{ label }}</h1>
        </div>
      </div>
    </div>
  </div>
  
  <div{{ content_attributes.addClass('node__content') }}>
    <div class="container">
      <div class="player-profile-container">
        <div class="player-photo-container">
          {% if player_photo_url %}
            <img src="{{ player_photo_url }}" alt="{{ player_photo_alt }}" class="player-photo" />
          {% elseif content.field_photo %}
            {{ content.field_photo }}
          {% else %}
            <div class="no-photo-placeholder">
              <span class="no-photo-text">{{ 'No photo available'|t }}</span>
            </div>
          {% endif %}
        </div>
        
        <div class="player-details-container">
          {% if content.field_nationality %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Nationality'|t }}:</div>
              <div class="player-detail-value">{{ content.field_nationality }}</div>
            </div>
          {% endif %}
          
          {% if content.field_age %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Age'|t }}:</div>
              <div class="player-detail-value">{{ content.field_age }}</div>
            </div>
          {% endif %}
          
          {% if content.field_date_of_birth %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Date of Birth'|t }}:</div>
              <div class="player-detail-value">
                {% if date_of_birth_formatted %}
                  {{ date_of_birth_formatted }}
                {% else %}
                  {{ content.field_date_of_birth }}
                {% endif %}
              </div>
            </div>
          {% endif %}
          
          {% if content.field_position %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Position'|t }}:</div>
              <div class="player-detail-value">{{ content.field_position }}</div>
            </div>
          {% endif %}
          
          {% if content.field_market_value %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Market Value'|t }}:</div>
              <div class="player-detail-value market-value">
                {% if market_value_formatted %}
                  {{ market_value_formatted }}
                {% else %}
                  {{ content.field_market_value }}
                {% endif %}
              </div>
            </div>
          {% endif %}
          
          {% if content.field_current_club %}
            <div class="player-detail-row">
              <div class="player-detail-label">{{ 'Current Club'|t }}:</div>
              <div class="player-detail-value club-value">{{ content.field_current_club }}</div>
            </div>
          {% endif %}
        </div>
      </div>
      
      {# Render any remaining fields that weren't explicitly included above #}
      <div class="player-additional-info">
        {{ content|without('field_photo', 'field_nationality', 'field_age', 'field_date_of_birth', 'field_position', 'field_market_value', 'field_current_club') }}
      </div>
    </div>
  </div>
</article> 